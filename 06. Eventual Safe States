Method 01: Eventual Safe States


class Solution {

    List<Integer> eventualSafeNodes(int V, List<List<Integer>> adj) {
        
        List<Integer> al=new ArrayList<Integer>();
        int vis[]=new int[V];
        for(int i=0;i<V;i++){
            if(dfs(i,adj,vis)){
                al.add(i);
            }
        }
        Collections.sort(al);
        return al;
    }
    
    private boolean dfs(int i,List<List<Integer>> adj,int vis[]){
        if(vis[i]!=0) {
            return vis[i]==2;
        }
        vis[i]=1;
        for(int nei:adj.get(i)){
        if(!dfs(nei,adj,vis)){
           return false;
        }
        }
        vis[i]=2;
        return true;
    }
}
